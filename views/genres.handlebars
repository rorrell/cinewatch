Contains functionalities to view and manipulate data in the Genres table and
the GenresMovies table.
<script type="text/javascript">
    function updateGenre(genreID) {
        let text = $("#row" + genreID + " > td:first");
        text.replaceWith('<td><input type="text" id="text' + genreID + '" name="title" value="' + text.text() + '" /></td>');
        let button = $("#row" + genreID + " > td:eq(1) > div:first > button:eq(1)");
        button.text("Save");
        button.attr('onclick', 'saveGenre(' + genreID + ', false)');
    }

    function saveGenre(genreID, isNew) {
        let row = $("#row" + genreID);
        let textBox = $("#row" + genreID + " > td:first > input:first");
        let text = textBox.val();
        var req = new XMLHttpRequest();
        req.onreadystatechange = function() {
            if (this.readyState === 4 && this.status === 200) {
                let res = JSON.parse(req.responseText);
                if (isNew) {
                    let button2 = $("#row" + genreID + " > td:eq(1) > div:first > button:first");
                    genreID = res.id;
                    button2.attr('onclick', 'deleteGenre(' + genreID + ')');
                }
                row.attr('id', 'row' + genreID);
                textBox.replaceWith(text);
                let button = $("#row" + genreID + " > td:eq(1) > div:first > button:eq(1)");
                button.text("Update");
                button.attr('onclick', 'updateGenre(' + genreID + ')');
            }
        };
        let url = isNew ? "/genres" : "/genres/update/" + genreID;
        req.open("POST", url, true);
        req.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        let body = isNew ? "textNew=" + text : "title=" + text;
        console.log(body);
        req.send(body);
    }

    function deleteGenre(genreID) {
        let req = new XMLHttpRequest();
        req.onreadystatechange = function() {
            if (this.readyState === 4 && this.status === 200) {
                let row = $("#row" + genreID);
                row.remove();
            }
        };
        req.open("GET", "/genres/delete/" + genreID, true);
        req.send();
    }

    function addGenre() {
        let newRow = $("#genreTable > tbody:first > tr:first").clone(true);
        newRow.attr('id', 'rowNew');
        $('#genreTable > tbody:first > tr:last').after(newRow);
        let button = $("#rowNew > td:eq(1) > div:first > button:eq(1)");
        button.text("Save");
        button.attr('onclick', 'saveGenre("New", true)');
        let text = $("#rowNew > td:first");
        text.replaceWith('<td><input type="text" id="textNew" name="title" value=""></td>');
        let form = $("#rowNew > form:first");
        form.attr('id', 'formNew');
    }
</script>
<div class="row">
    <div class="mx-auto" style="width: auto;">
        <button class="btn btn-light my-3" onclick="addGenre()">Add</button>
        <table id="genreTable" class="table table-light table-striped">
            <thead class="thead-dark">
            <tr>
                <th>Title</th>
                <th>&nbsp;</th>
            </tr>
            </thead>
            {{#each genres}}
                <tr id="row{{genreID}}">
                    <form id="form{{genreID}}" method="post" action="/genre/{{genreID}}">
                    <td>{{title}}</td>
                    <td>
                        <div class="d-flex flex-row-reverse">
                            <button type="button" class="btn btn-secondary" onclick="deleteGenre({{genreID}})">Delete</button>
                            <button type="button" class="btn btn-primary mx-2" onclick="updateGenre({{genreID}})">Update</button>
                        </div>
                    </td>
                    </form>
                </tr>
            {{/each}}
        </table>
    </div>
</div>