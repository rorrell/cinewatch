<div class="container">
    <div class="row">
        <div class="col">
            <form id="addTheatreForm">
                <h1 class="form-legend">Add new theatre</h1>
                <div class="form-group">
                    <label>Name</label>
                    <input type="text" class="form-control" id="theatreName" placeholder="CINEWATCH 14" required>
                </div>
                <div class="form-group">
                    <label>City</label>
                    <input type="text" class="form-control" id="theatreCity" placeholder="San Francisco" required>
                </div>
                <div class="form-group">
                    <label>State</label>
                    <input type="text" class="form-control" id="theatreState" placeholder="CA" maxlength="2" required>
                </div>
                <button type="submit" class="btn btn-primary form-submit" id="theatreSubmit">Submit</button>
            </form>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <h1 class="table-legend">Theatres</h1>
            <table class="table table-light table-striped" id="theatreTable">
                <thead class="thead-dark">
                <tr>
                    <th>Name</th>
                    <th>City</th>
                    <th>State</th>
                    <th>&nbsp;</th>
                </tr>
                </thead>
                <tbody id="theatreTableBody">
                {{#each theatres}}
                    <tr id="row{{theatreID}}">
                        <td>{{name}}</td>
                        <td>{{city}}</td>
                        <td>{{state}}</td>
                        <td>
                            <div class="d-flex flex-row-reverse">
                                <button class="btn btn-secondary" onclick="deleteTheatre({{theatreID}})">Delete</button>
                                <button class="btn btn-primary mx-2" onclick="updateTheatre({{theatreID}})">Update</button>
                            </div>
                        </td>
                    </tr>
                {{/each}}
                </tbody>
            </table>
        </div>
    </div>
</div>
<script type="text/javascript">
    url = String(window.location.href);
    document.getElementById("theatreSubmit").addEventListener("click", addNewTheatre);

    function add(data) {
        let table = document.getElementById("theatreTable").lastElementChild;
        let newRow = document.createElement("tr");

        let dataLength = data["rows"].length - 1;
        let newData = data["rows"][dataLength];
        newRow.setAttribute("id", "row" + String(newData["theatreID"]));
        for (i = 1; i < 4; i++) {
            let newCol = document.createElement("td");
            let values = Object.values(newData);
            newCol.innerHTML = String(values[i]);
            newRow.appendChild(newCol);
        }
        let buttonCol = document.createElement("td");
        let buttonDiv = document.createElement("div");
        buttonDiv.setAttribute("class", "d-flex flex-row-reverse");
        let newDelete = document.createElement("button");
        let newUpdate = document.createElement("button");
        newDelete.setAttribute("class", "btn btn-secondary");
        newDelete.setAttribute("onclick", "deleteTheatre(" + String(newData["theatreID"] + ")"));
        newDelete.innerHTML = "Delete";
        newUpdate.setAttribute("class", "btn btn-primary mx-2");
        newUpdate.setAttribute("onclick", "updateTheatre(" + String(newData["theatreID"] + ")"));
        newUpdate.innerHTML = "Update";
        buttonDiv.appendChild(newDelete);
        buttonDiv.appendChild(newUpdate);
        buttonCol.appendChild(buttonDiv);
        newRow.appendChild(buttonCol);

        table.appendChild(newRow);
    }

    function addNewTheatre() {
        document.getElementById("addTheatreForm").checkValidity();
        if (document.getElementById("addTheatreForm").reportValidity() == false) {
            return;
        }
        let req = new XMLHttpRequest();
        let payload = {name:null, city:null, state:null};
        payload.name = document.getElementById("theatreName").value;
        payload.city = document.getElementById("theatreCity").value;
        payload.state = document.getElementById("theatreState").value;
        req.open("POST", url, true);
        req.setRequestHeader("Content-Type", "application/json");
        req.addEventListener("load", function() {
            if (req.status >= 200 && req.status < 400) {
                let data = JSON.parse(req.responseText);
                add(data);
                document.getElementById("addTheatreForm").reset();
            } else {
                console.log("Error in network request: " + req.statusText);
            }
        })
        req.send(JSON.stringify(payload));
        event.preventDefault();
    }

    function deleteTheatre(ID) {
        var row = document.getElementById("row" + ID);
        let req = new XMLHttpRequest();
        let payload = {theatreID:null};
        payload.theatreID = ID;
        req.open("DELETE", url, true);
        req.setRequestHeader("Content-Type", "application/json");
        req.addEventListener("load", function () {
            if (req.status >= 200 && req.status < 400) {
                let data = JSON.parse(req.responseText);
                row.remove();
            } else {
                console.log("Error in network request: " + req.statusText);
            }
        })
        req.send(JSON.stringify(payload));
        event.preventDefault();
    }

    function updateTheatre(ID) {
        let row = document.getElementById("row" + ID);
        var currCol = row.firstElementChild;
        for (i = 0; i < 3; i++) {
            let textbox = document.createElement("input");
            textbox.setAttribute("type", "text");
            textbox.setAttribute("value", currCol.textContent);
            currCol.textContent = "";
            currCol.appendChild(textbox);
            currCol = currCol.nextElementSibling;
        }
        var button = row.lastElementChild.firstElementChild.lastElementChild;
        button.innerText = "Save";
        button.onclick = function(){saveTheatre(ID)};
    }

    function saveTheatre(ID) {
        let row = document.getElementById("row" + ID);
        var currCol = row.firstElementChild;
        if (currCol.firstElementChild.value == "") {
                return;
            }
        if (currCol.nextElementSibling.firstElementChild.value == "") {
                return;
            }
        if (currCol.nextElementSibling.nextElementSibling.firstElementChild.value == "") {
                return;
            }
        for (i = 0; i < 3; i++) {
            let child = currCol.firstElementChild;
            let text = currCol.firstElementChild.value;
            currCol.removeChild(child);
            currCol.textContent = text;
            currCol = currCol.nextElementSibling;
        }
        let req = new XMLHttpRequest();
        let name = row.firstElementChild;
        let city = row.firstElementChild.nextElementSibling;
        let state = row.firstElementChild.nextElementSibling.nextElementSibling;
        let theatreID = String(row.getAttribute("id")).slice(3, 6);
        let payload = {name:null, city:null, state:null, theatreID:null};
        payload.name = name.textContent;
        payload.city = city.textContent;
        payload.state = state.textContent;
        payload.theatreID = theatreID;

        req.open("PUT", url, true);
        req.setRequestHeader("Content-Type", "application/json");
        req.addEventListener("load", function () {
            if (req.status >= 200 && req.status < 400) {
                let data = JSON.parse(req.responseText);
                var button = row.lastElementChild.firstElementChild.lastElementChild;
                button.innerText = "Update";
                button.onclick = function(){updateTheatre(ID)};
            } else {
                console.log("Error in network request: " + req.statusText);
            }
        })
        req.send(JSON.stringify(payload));
        event.preventDefault();
    }
</script>
